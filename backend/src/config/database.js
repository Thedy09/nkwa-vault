const mongoose = require('mongoose');

const connectDB = async () => {
  try {
    // V√©rifier si MongoDB URI est configur√©
    if (!process.env.MONGODB_URI) {
      throw new Error('MONGODB_URI non configur√©. Veuillez configurer votre base de donn√©es.');
    }

    const mongoURI = process.env.MONGODB_URI;
    
    // Configuration optimis√©e pour la production
    const options = {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      serverSelectionTimeoutMS: 10000, // 10 secondes
      socketTimeoutMS: 45000,
      maxPoolSize: 10, // Maintenir jusqu'√† 10 connexions socket
      serverApi: {
        version: '1',
        strict: true,
        deprecationErrors: true,
      }
    };

    const conn = await mongoose.connect(mongoURI, options);

    console.log(`üóÑÔ∏è MongoDB connect√©: ${conn.connection.host}`);
    console.log(`üìä Base de donn√©es: ${conn.connection.name}`);
    
    // Gestion des √©v√©nements de connexion
    mongoose.connection.on('error', (err) => {
      console.error('‚ùå Erreur MongoDB:', err);
    });

    mongoose.connection.on('disconnected', () => {
      console.log('‚ö†Ô∏è MongoDB d√©connect√©');
    });

    mongoose.connection.on('reconnected', () => {
      console.log('üîÑ MongoDB reconnect√©');
    });

    // Gestion de la fermeture propre
    process.on('SIGINT', async () => {
      await mongoose.connection.close();
      console.log('üîå Connexion MongoDB ferm√©e');
      process.exit(0);
    });

    return true;

  } catch (error) {
    console.error('‚ùå Erreur de connexion MongoDB:', error.message);
    console.error('üí° Pour utiliser une base de donn√©es locale:');
    console.error('   1. Installez MongoDB: https://www.mongodb.com/try/download/community');
    console.error('   2. D√©marrez MongoDB: sudo systemctl start mongod');
    console.error('   3. Ou configurez MongoDB Atlas: https://cloud.mongodb.com/');
    console.error('   4. Cr√©ez un fichier .env avec MONGODB_URI');
    console.error('üîÑ Mode d√©mo activ√© - Base de donn√©es simul√©e');
    
    // En mode d√©mo, on continue sans MongoDB
    return false;
  }
};

module.exports = connectDB;
